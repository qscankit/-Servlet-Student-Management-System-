/*
 * Generated by the Jasper component of Apache Tomcat
 * Version: Apache Tomcat/9.0.70
 * Generated at: 2023-01-25 10:28:49 UTC
 * Note: The last modified time of this file was set to
 *       the last modified time of the source file after
 *       generation to assist with modification tracking.
 */
package org.apache.jsp;

import javax.servlet.*;
import javax.servlet.http.*;
import javax.servlet.jsp.*;
import com.ty.student_management_project.dto.Student;
import com.ty.student_management_project.service.StudentService;

public final class due_005fstudent_jsp extends org.apache.jasper.runtime.HttpJspBase
    implements org.apache.jasper.runtime.JspSourceDependent,
                 org.apache.jasper.runtime.JspSourceImports {

  private static final javax.servlet.jsp.JspFactory _jspxFactory =
          javax.servlet.jsp.JspFactory.getDefaultFactory();

  private static java.util.Map<java.lang.String,java.lang.Long> _jspx_dependants;

  private static final java.util.Set<java.lang.String> _jspx_imports_packages;

  private static final java.util.Set<java.lang.String> _jspx_imports_classes;

  static {
    _jspx_imports_packages = new java.util.HashSet<>();
    _jspx_imports_packages.add("javax.servlet");
    _jspx_imports_packages.add("javax.servlet.http");
    _jspx_imports_packages.add("javax.servlet.jsp");
    _jspx_imports_classes = new java.util.HashSet<>();
    _jspx_imports_classes.add("com.ty.student_management_project.dto.Student");
    _jspx_imports_classes.add("com.ty.student_management_project.service.StudentService");
  }

  private volatile javax.el.ExpressionFactory _el_expressionfactory;
  private volatile org.apache.tomcat.InstanceManager _jsp_instancemanager;

  public java.util.Map<java.lang.String,java.lang.Long> getDependants() {
    return _jspx_dependants;
  }

  public java.util.Set<java.lang.String> getPackageImports() {
    return _jspx_imports_packages;
  }

  public java.util.Set<java.lang.String> getClassImports() {
    return _jspx_imports_classes;
  }

  public javax.el.ExpressionFactory _jsp_getExpressionFactory() {
    if (_el_expressionfactory == null) {
      synchronized (this) {
        if (_el_expressionfactory == null) {
          _el_expressionfactory = _jspxFactory.getJspApplicationContext(getServletConfig().getServletContext()).getExpressionFactory();
        }
      }
    }
    return _el_expressionfactory;
  }

  public org.apache.tomcat.InstanceManager _jsp_getInstanceManager() {
    if (_jsp_instancemanager == null) {
      synchronized (this) {
        if (_jsp_instancemanager == null) {
          _jsp_instancemanager = org.apache.jasper.runtime.InstanceManagerFactory.getInstanceManager(getServletConfig());
        }
      }
    }
    return _jsp_instancemanager;
  }

  public void _jspInit() {
  }

  public void _jspDestroy() {
  }

  public void _jspService(final javax.servlet.http.HttpServletRequest request, final javax.servlet.http.HttpServletResponse response)
      throws java.io.IOException, javax.servlet.ServletException {

    if (!javax.servlet.DispatcherType.ERROR.equals(request.getDispatcherType())) {
      final java.lang.String _jspx_method = request.getMethod();
      if ("OPTIONS".equals(_jspx_method)) {
        response.setHeader("Allow","GET, HEAD, POST, OPTIONS");
        return;
      }
      if (!"GET".equals(_jspx_method) && !"POST".equals(_jspx_method) && !"HEAD".equals(_jspx_method)) {
        response.setHeader("Allow","GET, HEAD, POST, OPTIONS");
        response.sendError(HttpServletResponse.SC_METHOD_NOT_ALLOWED, "JSPs only permit GET, POST or HEAD. Jasper also permits OPTIONS");
        return;
      }
    }

    final javax.servlet.jsp.PageContext pageContext;
    javax.servlet.http.HttpSession session = null;
    final javax.servlet.ServletContext application;
    final javax.servlet.ServletConfig config;
    javax.servlet.jsp.JspWriter out = null;
    final java.lang.Object page = this;
    javax.servlet.jsp.JspWriter _jspx_out = null;
    javax.servlet.jsp.PageContext _jspx_page_context = null;


    try {
      response.setContentType("text/html");
      pageContext = _jspxFactory.getPageContext(this, request, response,
      			null, true, 8192, true);
      _jspx_page_context = pageContext;
      application = pageContext.getServletContext();
      config = pageContext.getServletConfig();
      session = pageContext.getSession();
      out = pageContext.getOut();
      _jspx_out = out;

      out.write("<!DOCTYPE html>\r\n");
      out.write("\r\n");
      out.write("\r\n");
      out.write("\r\n");
      out.write("<html lang=\"en\">\r\n");
      out.write("<head>\r\n");
      out.write("    <meta charset=\"UTF-8\">\r\n");
      out.write("    <meta http-equiv=\"X-UA-Compatible\" content=\"IE=edge\">\r\n");
      out.write("    <meta name=\"viewport\" content=\"width=device-width, initial-scale=1.0\">\r\n");
      out.write("    <title>Due Student</title>\r\n");
      out.write("    <style>\r\n");
      out.write("        .sec1{\r\n");
      out.write("            background-color: grey;\r\n");
      out.write("            padding: 40px;\r\n");
      out.write("            border: 10px double black;\r\n");
      out.write("        }\r\n");
      out.write("        h1{\r\n");
      out.write("            display: flex;\r\n");
      out.write("            justify-content: center;\r\n");
      out.write("            text-decoration: underline;\r\n");
      out.write("            font-size: 30px;\r\n");
      out.write("            color: black;\r\n");
      out.write("            margin-bottom: 60px;\r\n");
      out.write("        }\r\n");
      out.write("        .field1{\r\n");
      out.write("            position: relative;\r\n");
      out.write("            bottom: 40px;\r\n");
      out.write("        }\r\n");
      out.write("        legend{\r\n");
      out.write("            font-size: 20px;\r\n");
      out.write("            text-align: center;\r\n");
      out.write("            font-weight: bold;\r\n");
      out.write("            color: rgb(3, 3, 97);\r\n");
      out.write("            margin-bottom: 10px;\r\n");
      out.write("        }\r\n");
      out.write("       \r\n");
      out.write("        .block{\r\n");
      out.write("            display: flex;\r\n");
      out.write("        \r\n");
      out.write("            position: relative;\r\n");
      out.write("            left: 90px;\r\n");
      out.write("            top: -20px;   \r\n");
      out.write("        }\r\n");
      out.write("\r\n");
      out.write("       \r\n");
      out.write("        a{  \r\n");
      out.write("            display: inline-block;\r\n");
      out.write("            position: relative;\r\n");
      out.write("            width: 100px;\r\n");
      out.write("            border: 1px solid black;\r\n");
      out.write("            left: 300px;\r\n");
      out.write("            color: black;\r\n");
      out.write("            text-decoration: none;\r\n");
      out.write("            text-align: center;\r\n");
      out.write("            background-color: aliceblue;\r\n");
      out.write("            padding: 7px;\r\n");
      out.write("        }\r\n");
      out.write("        \r\n");
      out.write("\r\n");
      out.write("    </style>\r\n");
      out.write("</head>\r\n");
      out.write("<body>\r\n");
      out.write("\r\n");
      out.write("	<form action=\"student_due.jsp\">\r\n");
      out.write("		\r\n");
      out.write("		\r\n");
      out.write("		");
 
		StudentService studentService = new StudentService();
		int roll = Integer.parseInt(request.getParameter("roll"));
		Student student = studentService.getByAll(roll);
		
      out.write("\r\n");
      out.write("	</form>\r\n");
      out.write("    <header>\r\n");
      out.write("    \r\n");
      out.write("    <section class=\"sec1\">\r\n");
      out.write("		");
if(student!=null){ 
      out.write("\r\n");
      out.write("		");
if(student.getRoll()==roll){ 
      out.write("\r\n");
      out.write("        <h1>Due Student</h1>\r\n");
      out.write("        <form action=\"#\">\r\n");
      out.write("            <fieldset style=\"border: 3px dashed black;\" class=\"field1\">\r\n");
      out.write("                <legend >Personal Details</legend>\r\n");
      out.write("                <label for=\"name\">Name :</label><input class=\"block\" id=\"name\" type=\"text\" name=\"name\" readonly=\"readonly\"  value=");
      out.print( student.getName());
      out.write("><br><br>\r\n");
      out.write("                <label for=\"email\">Email :</label><input class=\"block\" id=\"email\" type=\"text\" name=\"email\" readonly=\"readonly\"  value=");
      out.print( student.getEmail());
      out.write("><br><br>\r\n");
      out.write("                <label for=\"roll\">Roll No :</label><input class=\"block\"  id=\"roll\" type=\"number\" name=\"roll\" readonly=\"readonly\"  value=");
      out.print(student.getRoll());
      out.write("><br><br>\r\n");
      out.write("                <label for=\"course\">Course :</label><input class=\"block\" id=\"course\" type=\"text\" name=\"course\" readonly=\"readonly\"  value=");
      out.print(student.getCourse());
      out.write("><br><br>\r\n");
      out.write("                <label for=\"fee\">Fee  :</label><input class=\"block\" id=\"fee\" type=\"number\" name=\"fee\" readonly=\"readonly\"  value=");
      out.print(student.getFee());
      out.write("><br><br>\r\n");
      out.write("                <label for=\"paid\">Paid :</label><input class=\"block\" id=\"paid\" type=\"number\" name=\"paid\" readonly=\"readonly\"  value=");
      out.print(student.getPaid());
      out.write("><br><br>\r\n");
      out.write("                <label for=\"due\">Due :</label><input class=\"block\" id=\"due\" type=\"number\" name=\"due\" readonly=\"readonly\"  value=");
      out.print(student.getDue());
      out.write("><br><br>\r\n");
      out.write("            </fieldset>\r\n");
      out.write("                <a href=\"student_due.jsp\">Back</a>\r\n");
      out.write("\r\n");
      out.write("         \r\n");
      out.write("        </form>\r\n");
      out.write("		");
} 
      out.write("\r\n");
      out.write("		");
} 
      out.write("\r\n");
      out.write("		");
if(student==null){ 
      out.write("\r\n");
      out.write("		<h1 style='color:black'>Invalid Roll No...</h1>\r\n");
      out.write("\r\n");
      out.write("                <a href=\"student_due.jsp\">Back</a>\r\n");
      out.write("                ");
 }
      out.write("\r\n");
      out.write("               \r\n");
      out.write("    </section>\r\n");
      out.write("    </header>\r\n");
      out.write("</body>\r\n");
      out.write("</html>");
    } catch (java.lang.Throwable t) {
      if (!(t instanceof javax.servlet.jsp.SkipPageException)){
        out = _jspx_out;
        if (out != null && out.getBufferSize() != 0)
          try {
            if (response.isCommitted()) {
              out.flush();
            } else {
              out.clearBuffer();
            }
          } catch (java.io.IOException e) {}
        if (_jspx_page_context != null) _jspx_page_context.handlePageException(t);
        else throw new ServletException(t);
      }
    } finally {
      _jspxFactory.releasePageContext(_jspx_page_context);
    }
  }
}
